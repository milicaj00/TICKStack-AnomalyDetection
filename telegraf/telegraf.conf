# Configuration for telegraf agent
[agent]
  
  interval = "5s"
 
  round_interval = true

  metric_batch_size = 1000

  metric_buffer_limit = 10000

  collection_jitter = "0s"

  flush_interval = "5s"
 
  flush_jitter = "0s"

  precision = ""

  hostname = "telegraf"
 
  omit_hostname = false
  
 
  
[[outputs.influxdb_v2]]
  
  urls = ["http://influxdb:8086"]

  ## Token for authentication.
  token = "bi9k_VcO_lG-ba66ayEIjfVS8H-Zw0WsSJLiBPwJuOw8DdzUhAesfZiwWpufXTGoOaBX9rBsAva2hkMUVxej5w=="


  organization = "Elfak"

  ## Destination bucket to write into.
  bucket = "test"

  ## The value of this tag will be used to determine the bucket.  If this
  ## tag is not set the 'bucket' option is used as the default.
  # bucket_tag = ""

  ## If true, the bucket tag will not be added to the metric.
  # exclude_bucket_tag = false

  ## Timeout for HTTP messages.
  # timeout = "5s"

  ## Additional HTTP headers
  # http_headers = {"X-Special-Header" = "Special-Value"}

  ## HTTP Proxy override, if unset values the standard proxy environment
  ## variables are consulted to determine which proxy, if any, should be used.
  # http_proxy = "http://corporate.proxy:3128"

  ## HTTP User-Agent
  # user_agent = "telegraf"

  ## Content-Encoding for write request body, can be set to "gzip" to
  ## compress body or "identity" to apply no encoding.
  # content_encoding = "gzip"

  ## Enable or disable uint support for writing uints influxdb 2.0.
  # influx_uint_support = false

  ## Optional TLS Config for use on HTTP connections.
  # tls_ca = "/etc/telegraf/ca.pem"
  # tls_cert = "/etc/telegraf/cert.pem"
  # tls_key = "/etc/telegraf/key.pem"
  ## Use TLS but skip chain & host verification
  # insecure_skip_verify = false
# Read formatted metrics from one or more HTTP endpoints
[[inputs.http]]
  ## One or more URLs from which to read formatted metrics
  name_override = "sell"
  urls = [
          #"https://api.coinbase.com/v2/prices/MATIC-USD/sell",
		  #"https://api.coinbase.com/v2/prices/ETH2-USD/sell",
		  "https://api.coinbase.com/v2/prices/XRP-USD/sell",
          ]
  method = "GET"
  data_format = "json"
  json_query = "data"
  tag_keys = ["base", "currency"]
  json_string_fields = ["amount"]
  tagexclude = ["url", "currency"]



# Convert values to another metric value type
[[processors.converter]]
  [processors.converter.fields]
    float = ["amount"]
